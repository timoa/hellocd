name: HelloCD
trigger:
- develop

stages:
- stage: Init
  displayName: Init
  jobs:
  - job: Setup
    displayName: App Setup
    pool:
      vmImage: ubuntu-18.04
    steps:
    - script: |
        perl -pi -e 's/<version>[\d\.]+<\/version>/<version>1.0.$(Build.BuildNumber)<\/version>/g' tiapp.xml
      displayName: 'Set the build version'

- stage: UnitTests
  displayName: Tests
  jobs:
  - job: Tests
    displayName: 'Tests'
    pool:
      vmImage: ubuntu-18.04
    steps:
    - script: |
        pwd
      displayName: 'Run unit-tests'

- stage: CodeAnalysis
  displayName: Code Analysis
  dependsOn: [Init]
  jobs:
  - job: SonarCloud
    displayName: 'SonarCloud'
    pool:
      vmImage: ubuntu-18.04
    steps:
    - script: |
        pwd
      displayName: 'Run SonarCloud analysis'

- stage: SecurityAnalysis
  displayName: Security Analysis
  dependsOn: [Init]
  jobs:
  - job: Snyk
    displayName: 'Snyk'
    pool:
      vmImage: ubuntu-18.04
    steps:
    - script: |
        pwd
      displayName: 'Run Snyk analysis'

- stage: IosBuild
  displayName: iOS Build
  dependsOn: 
  - Init
  - CodeAnalysis
  - SecurityAnalysis
  jobs:
  - job: Build
    displayName: Build the iOS app
    pool:
      vmImage: macOS-10.14
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm install -g titanium alloy
      displayName: 'Install the Titanium CLI + Alloy'
    - script: |
        echo "y" | titanium sdk install latest
      displayName: 'Install latest Titanium SDK'
    - script: |
        perl -pi -e 's/<guid>xxx/<guid>$(TIAPP_GUID)/g' tiapp.xml
      displayName: 'Replace the App GUID'
    - script: |
        titanium build -p ios --build-only
      displayName: 'Build the iOS app'
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/build/iphone/build/Products/Debug-iphonesimulator
        artifact: HellocdIos

- stage: AndroidBuild
  displayName: Android Build
  dependsOn: 
  - Init
  - CodeAnalysis
  - SecurityAnalysis
  jobs:
  - job: Build
    displayName: Build the app
    pool:
      vmImage: macOS-10.14
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm install -g titanium alloy
      displayName: 'Install the Titanium CLI + Alloy'
    - script: |
        echo "y" | titanium sdk install latest
      displayName: 'Install latest Titanium SDK'
    - script: |
        titanium info
      displayName: '[Debug] Check Titanium environment'
    - script: |
        perl -pi -e 's/<guid>xxx/<guid>$(TIAPP_GUID)/g' tiapp.xml
      displayName: 'Replace the App GUID'
    - script: |
        perl -pi -e 's/android:debuggable="false"/android:debuggable="true"/g' tiapp.xml
      displayName: 'Active Android Debug mode'
    - script: |
        titanium build -p android --build-only
      displayName: 'Build the Android app'
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/build/android/bin/HelloCD.apk
        artifact: HellocdAndroid

- stage: IosUiTests
  displayName: iOS UI Tests
  dependsOn: 
  - IosBuild
  jobs:
  - job: IosAppium
    displayName: 'Appium UI Tests'
    pool:
      vmImage: macOS-10.14
    steps:
    - script: |
        pwd
      displayName: 'Run Appium UI Tests'

- stage: AndroidUiTests
  displayName: Android UI Tests
  dependsOn: 
  - AndroidBuild
  jobs:
  - job: AndroidAppium
    displayName: 'Appium UI Tests'
    pool:
      vmImage: macOS-10.14
    steps:
    - script: |
        pwd
      displayName: 'Run Appium UI Tests'

- stage: IosProdBuild
  displayName: iOS UI Tests
  dependsOn: 
  - IosUiTests
  - AndroidUiTests
  jobs:
  - job: IosSignedBuild
    displayName: 'iOS Signed Build'
    pool:
      vmImage: macOS-10.14
    steps:
    - script: |
        pwd
      displayName: 'Build the production build'

- stage: AndroidProdBuild
  displayName: Android UI Tests
  dependsOn: 
  - IosUiTests
  - AndroidUiTests
  jobs:
  - job: AndroidSignedBuild
    displayName: 'Android Signed Build'
    pool:
      vmImage: macOS-10.14
    steps:
    - script: |
        pwd
      displayName: 'Build the production build'